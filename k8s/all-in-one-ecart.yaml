---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cart
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cart
    spec:
      containers:
      - name: cart
        image: teamcloudyuga/cart-prometheus
        ports:
        - containerPort: 5003
---

apiVersion: v1
kind: Service
metadata:
  name: cart
  labels:
    app: cart
spec:
  ports:
  - port: 5003
    targetPort: 5003
    protocol: TCP
  selector:
    app: cart
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cartdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cartdb
    spec:
      volumes:
        - name: cartdb
          emptyDir: {}
      containers:
      - name: cartdb
        image: mongo
        volumeMounts:
        - name: cartdb
          mountPath: /data/db
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: cartdb
  labels:
    app: cartdb
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    app: cartdb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: catalogue
    spec:
      containers:
      - name: catalogue
        image: teamcloudyuga/catalogue-prometheus
        ports:
        - containerPort: 5001
---

apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    app: catalogue
spec:
  ports:
  - port: 5001
    targetPort: 5001
    protocol: TCP
  selector:
    app: catalogue

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cataloguedb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        appdb: cataloguedb
    spec:
      volumes:
        - name: voldb
          emptyDir: {}
        - name: demo
          emptyDir: {}
      initContainers:
      - image: busybox
        name: init-db
        volumeMounts:
        - name: demo
          mountPath: /tmp/data
        command: ["/bin/sh", "-c", "wget https://raw.githubusercontent.com/cloudyuga/e-cart/ninth-prometheus/nosqldump/data/productData.js -O /tmp/data/productData.js"] 
      containers:
      - name: cataloguedb
        image: mongo
        env:
        - name: MONGO_INITDB_DATABASE
          value: productDb
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: voldb
          mountPath: /data/db
        - name: demo
          mountPath: /docker-entrypoint-initdb.d
---
apiVersion: v1
kind: Service
metadata:
  name: cataloguedb
  labels:
    app: cataloguedb
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    appdb: cataloguedb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: teamcloudyuga/frontend-prometheus
        ports:
        - containerPort: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: NodePort
  ports:
  - port: 5000
    nodePort: 31500
    targetPort: 5000
    protocol: TCP
  selector:
    app: frontend
--- 
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
      - name: orders
        image: teamcloudyuga/orders-prometheus
        ports:
        - containerPort: 5004
---

apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    app: orders
spec:
  ports:
  - port: 5004
    targetPort: 5004
    protocol: TCP
  selector:
    app: orders
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ordersdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ordersdb
    spec:
      volumes:
        - name: ordersdb
          emptyDir: {}
      containers:
      - name: ordersdb
        image: mongo
        volumeMounts:
        - name: ordersdb
          mountPath: /data/db
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: ordersdb
  labels:
    app: ordersdb
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    app: ordersdb

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: payment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
      - name: payment
        image: teamcloudyuga/payment-go-opentracing
        ports:
        - containerPort: 5005
          name: p-port
        - containerPort: 8700
          name: o-port
---

apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
spec:
  ports:
  - name: p-port
    port: 5005
    targetPort: 5005
    protocol: TCP
  - name: o-port
    port: 8700
    targetPort: 8700
    protocol: TCP
  selector:
    app: payment
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: paymentdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: paymentdb
    spec:
      volumes:
        - name: paymentdb
          emptyDir: {}
      containers:
      - name: paymentdb
        image: mongo
        volumeMounts:
        - name: paymentdb
          mountPath: /data/db
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: paymentdb
  labels:
    app: paymentdb
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    app: paymentdb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
        - name: voldb1
          emptyDir: {}
        - name: demo1
          emptyDir: {}
      initContainers:
      - image: busybox
        name: init-db1
        volumeMounts:
        - name: demo1
          mountPath: /tmp/data
        command: ["/bin/sh", "-c", "wget https://raw.githubusercontent.com/cloudyuga/e-cart/ninth-prometheus/config/prometheus/prometheus.yml -O /tmp/data/prometheus.yml"] 
      containers:
      - name: prometheus
        image: prom/prometheus
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: voldb1
          mountPath: /prometheus
        - name: demo1
          mountPath: /etc/prometheus/
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  type: NodePort
  ports:
  - port: 9090
    nodePort: 31900
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
      - name: user
        image: teamcloudyuga/user-prometheus
        ports:
        - containerPort: 5002
---

apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app: user
spec:
  ports:
  - port: 5002
    targetPort: 5002
    protocol: TCP
  selector:
    app: user
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: userdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: userdb
    spec:
      volumes:
        - name: userdb
          emptyDir: {}
      containers:
      - name: userdb
        image: mongo
        volumeMounts:
        - name: userdb
          mountPath: /data/db
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: userdb
  labels:
    app: userdb
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    app: userdb
